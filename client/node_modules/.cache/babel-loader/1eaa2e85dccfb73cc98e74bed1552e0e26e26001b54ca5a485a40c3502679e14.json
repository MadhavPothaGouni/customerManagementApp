{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\potha\\\\OneDrive\\\\Desktop\\\\customer-crud-app\\\\client\\\\src\\\\pages\\\\AddressFormPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AddressForm from '../components/AddressForm';\nimport api from '../services/api';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddressFormPage() {\n  _s();\n  const {\n    customerId,\n    addressId\n  } = useParams();\n  const isEdit = Boolean(addressId);\n  const nav = useNavigate();\n  const [initial, setInitial] = useState(null);\n  useEffect(() => {\n    if (!isEdit) return;\n    api.get(`/customers/${customerId}/addresses`).then(res => {\n      const found = (res.data.data || []).find(a => String(a.id) === String(addressId));\n      if (found) setInitial(found);\n    }).catch(() => alert('Failed to load address'));\n  }, [customerId, addressId, isEdit]);\n  const submit = async form => {\n    try {\n      if (isEdit) await api.put(`/addresses/${addressId}`, form);else await api.post(`/customers/${customerId}/addresses`, form);\n      alert('Saved');\n      nav(`/customers/${customerId}`);\n    } catch (e) {\n      alert('Save failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AddressForm, {\n    initial: initial,\n    onSubmit: submit,\n    submitLabel: isEdit ? 'Update' : 'Create'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n_s(AddressFormPage, \"tqwfwLJy2MqXrwYM7FyKL2ZP9aE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AddressFormPage;\nvar _c;\n$RefreshReg$(_c, \"AddressFormPage\");","map":{"version":3,"names":["React","useEffect","useState","AddressForm","api","useNavigate","useParams","jsxDEV","_jsxDEV","AddressFormPage","_s","customerId","addressId","isEdit","Boolean","nav","initial","setInitial","get","then","res","found","data","find","a","String","id","catch","alert","submit","form","put","post","e","onSubmit","submitLabel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/potha/OneDrive/Desktop/customer-crud-app/client/src/pages/AddressFormPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AddressForm from '../components/AddressForm';\r\nimport api from '../services/api';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function AddressFormPage(){\r\n  const { customerId, addressId } = useParams();\r\n  const isEdit = Boolean(addressId);\r\n  const nav = useNavigate();\r\n  const [initial, setInitial] = useState(null);\r\n\r\n  useEffect(()=> {\r\n    if (!isEdit) return;\r\n    api.get(`/customers/${customerId}/addresses`).then(res=>{\r\n      const found = (res.data.data || []).find(a => String(a.id) === String(addressId));\r\n      if (found) setInitial(found);\r\n    }).catch(()=> alert('Failed to load address'));\r\n  }, [customerId, addressId, isEdit]);\r\n\r\n  const submit = async (form) => {\r\n    try {\r\n      if (isEdit) await api.put(`/addresses/${addressId}`, form);\r\n      else await api.post(`/customers/${customerId}/addresses`, form);\r\n      alert('Saved');\r\n      nav(`/customers/${customerId}`);\r\n    } catch (e) { alert('Save failed'); }\r\n  };\r\n\r\n  return <AddressForm initial={initial} onSubmit={submit} submitLabel={isEdit ? 'Update' : 'Create'} />;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,eAAeA,CAAA,EAAE;EAAAC,EAAA;EACvC,MAAM;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7C,MAAMO,MAAM,GAAGC,OAAO,CAACF,SAAS,CAAC;EACjC,MAAMG,GAAG,GAAGV,WAAW,CAAC,CAAC;EACzB,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAK;IACb,IAAI,CAACY,MAAM,EAAE;IACbT,GAAG,CAACc,GAAG,CAAC,cAAcP,UAAU,YAAY,CAAC,CAACQ,IAAI,CAACC,GAAG,IAAE;MACtD,MAAMC,KAAK,GAAG,CAACD,GAAG,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE,EAAEC,IAAI,CAACC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAACE,EAAE,CAAC,KAAKD,MAAM,CAACb,SAAS,CAAC,CAAC;MACjF,IAAIS,KAAK,EAAEJ,UAAU,CAACI,KAAK,CAAC;IAC9B,CAAC,CAAC,CAACM,KAAK,CAAC,MAAKC,KAAK,CAAC,wBAAwB,CAAC,CAAC;EAChD,CAAC,EAAE,CAACjB,UAAU,EAAEC,SAAS,EAAEC,MAAM,CAAC,CAAC;EAEnC,MAAMgB,MAAM,GAAG,MAAOC,IAAI,IAAK;IAC7B,IAAI;MACF,IAAIjB,MAAM,EAAE,MAAMT,GAAG,CAAC2B,GAAG,CAAC,cAAcnB,SAAS,EAAE,EAAEkB,IAAI,CAAC,CAAC,KACtD,MAAM1B,GAAG,CAAC4B,IAAI,CAAC,cAAcrB,UAAU,YAAY,EAAEmB,IAAI,CAAC;MAC/DF,KAAK,CAAC,OAAO,CAAC;MACdb,GAAG,CAAC,cAAcJ,UAAU,EAAE,CAAC;IACjC,CAAC,CAAC,OAAOsB,CAAC,EAAE;MAAEL,KAAK,CAAC,aAAa,CAAC;IAAE;EACtC,CAAC;EAED,oBAAOpB,OAAA,CAACL,WAAW;IAACa,OAAO,EAAEA,OAAQ;IAACkB,QAAQ,EAAEL,MAAO;IAACM,WAAW,EAAEtB,MAAM,GAAG,QAAQ,GAAG;EAAS;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvG;AAAC7B,EAAA,CAxBuBD,eAAe;EAAA,QACHH,SAAS,EAE/BD,WAAW;AAAA;AAAAmC,EAAA,GAHD/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}